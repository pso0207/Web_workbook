plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.zerock'
version = '0.0.1-SNAPSHOT'

/* 자바 버전: 프로젝트에 맞춰 선택
 * Spring Boot 2.6.4는 Java 11/17 모두 OK
 */
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)  // 필요시 17로 변경 가능
	}
}

ext {
	queryDslVersion = '5.0.0'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // javax

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'


	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.1.0'

	// DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// QueryDSL (javax 변형)
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
	annotationProcessor "javax.persistence:javax.persistence-api:2.2"
	annotationProcessor "javax.annotation:javax.annotation-api:1.3.2"

	// Devtools (선택)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

/* QueryDSL 생성 소스 경로를 IDE가 읽을 수 있게 등록 */
def qdslOut = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main")
tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = qdslOut.get().asFile
}
sourceSets {
	main {
		java {
			srcDirs += qdslOut.get().asFile
		}
	}
}
